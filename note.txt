// P数字はページ番号

P2
「クラウドファンディングベースによる OSS プロジェクト」画像のすぐ上の行
プロジェクトして開発を行っています。

P8
「補足の*24」内
この名称前はECMAScript 6th Editionとして

P10
「1.2.1 学習コストが低い」内のテンプレートコード下2行目
まだ文法事項を解説してないので、

P11
冒頭から5行目
先に上げた現代の

P15
「1.4.1 宣言的レンダリング(Declarative Rendering)」内の4〜5行目
シンプルなWebサイトはじめ、

P18
冒頭のコードの3行目
<template>

P22
「1.6 Vue.jsのエコシステム」内の6行目
ユーザーのWebアプリケーションを開発をサポートするために

P23
リストの「Vue Curated」内
Vue.jsコアチームが激選したプラグイン、

P34
「2.3 Vueオブジェクト」内の1行目
基本機能を紹介してきます。

P47
「フィルタの出力の確認」画像内のフィルター処理例
フィルター処理例 1000

P55
「2.9.2 クラスとスタイルのバインディング」内の9行目(コード行除く)
"collor: tomato;"

P71
「2.10.4 beforeDestroyフック」内の71ページ側のコード4行目のコメント
// データに参照できる

P73
「算出プロパティのキャッシュ機構」内の1行目
いずれも関数の形と取るという点では

P85
「3.2.1 グローバルコンポーネントの定義」内のオプション表のfilters行
データを文字列と整形する

P96
ページ最下段のコード内のコメント行
<!-- v-forで繰り返した各furitを

P102
「3.4.1 コンポーネントの分割方針」内の1行目
Webアプリケーションの中であるページを設計する際の

P104
「Atomic Design」Column内の箇条書きの3行目
ログインフォームやコメントフォームなナビゲーションバーなど。

P118
3行目
〜部分にレンダリングされます。ページを開いてからページ遷移が

P123
「4.4 サンプルアプリケーションの実装」内の3行目
ユーザー情報登録・閲覧が可能なアプリケーション用います。

P123
「補足の*7」内
ES2015以降でプログラムを作成したい場合もWebpackの利用はほぼ必須です。

P124
「Vue.js本体とVue Routerの読み込み」のバージョン指定部分
<script src="https://unpkg.com/vue@2.4.2/dist/vue.min.js"></script>
<script src="https://unpkg.com/vue-router@2.7.0/dist/vue-router.min.js"></script>

P136
「4.4.6 サンプルアプリケーションの全体像」内のVue.js本体とVue Routerのバージョン指定部分
<script src="https://unpkg.com/vue@2.5.17"></script>
<script src="https://unpkg.com/vue-router@3.1.0"></script>

P147
「Vue Routerを使った大規模なアプリケーションの実装」コラム内の3行目
propを使ったデータの受け渡し

P151
「5.1.3 fadeトランジションの実装」内の1行目
実際にコードと見ていきます。

P160
「5.2 スロット」節に入る2行前
Velocity.js,jQueryのアニメーション機能、

P161
冒頭から2行目
プロパティでテキストを渡して表示されても

P168
「5.3 カスタムディレクティブ」内の9行目
Vue.jsのアプリケーションを実装する上で、ビルドインの

P170
「no imageの画像」(画像差し込み)の1行前
すると以下のようにnoimageの画像が

P171
「フックできるタイミングの一覧」(表)内のbindの内容
ディレクティブが対象の要素にひも付いた1度だけ

P175
ページ中央付近「no image」から始まる行の2行目
文字列をセットして、属性値と指定します。

P176
「no image」画像の下の2行目
no_image画像も何も表示されなくなるはずです。

P192
上部コード下の文章の3行目
コンポーネントオプジョンのmixins

P194
1行目
methodsやcomponents,directives等の

P194
5行目
コンポーネントで同名のシェアというメソッドを

P197
ページ中央のコード部分
JSON.strinfigy({name: 'Evan You'})

P198
「ミックスインの命名規則」内の下から6行目
「~できるようになる」

P214
画像のタイトル部分
socped 属性によるカプセル化が

P219
冒頭から2行目
Vue.jsのクラスに対して使用可能なのオブジェクト

P228
ページ下部の補足の直前の行
HelloWorld.vueを以下のよう編集しましょう。

P251
ページ最下部の補足*15
〜省略することのできる記法です。以下の「この例では、」で始まる2つの文章

P278
コード部分の下の文章の2行目
アクションがどのようにストアに登録にされるかを

P285
「7.7.2 ストアにアクセスするコンポーネントを必要最小限にする」内の1行目
変更に強いアプリを作ります。

P287
冒頭から6行目
ここで上げた2つの手法は

P292
「8.1 Vue.jsのプロジェクト構築の特徴」内のサポートリスト下の2行目
特定の機能やライブラリの使用を強制するものあります。

P294
リストの上から2番目
ログインできるユーザーはあらかじめ事前に

P294
リストの上から5番目
ボード内には以下状態を持ったタスクを

P295
モーダル内のTEXTAREA
ブロックをしないようする

P296
リストの上から1番目
ログインできるユーザーはあらかじめ事前に

P296
リストの上から5番目
ボード内には以下状態を持ったタスクを

P297
リストの上から1番目
リアクティブなUI表示を可能する

P298
リストの下の文章ブロック1行目
iOS開発ならIDEのXcodeでは

P298
「8.3.2 JavaScriptの環境構築とVue CLI」内の4〜5行目
Vue CLIを利用した開発環境を構築を

P301
「8.4.2 プロジェクト構造」のディレクトリ/ファイルリスト内のmain.jsのコメント
アプリケーションのエントポイント

P302
「8.4.2 プロジェクト構造」のディレクトリ/ファイルリスト(続き)内のpackage.jsonのコメント
nmpのモジュール、タスク定義

P302
「8.4.2 プロジェクト構造」の表のbuild/の項目
アプリケーションをビルドに関する設定

P302
「8.4.2 プロジェクト構造」の表のindex.htmlの項目
このテンプレートファイル元に、バンドリングされる

P302
補足の*19内の2行目
アプリケーションコードにコードガイドラインに従っていないかどかチェックする

P303
「8.4.4 アプリケーションの起動確認」内の1行目
アプリケーションプロジェクトの作成しました。

P303
「8.4.4 アプリケーションの起動確認」内の画像のキャプション
npm run devコマンド実行時の表示される画面

P306
「check-versions.js」内の2行目
package.jsonに定義されたNode.jsとnpmのバージョンが満たしているかどうか

P306「webpack.prod.conf.js」内の1行目
本番環境にリリースするための最適化するために、

P306「webpack.prod.conf.js」内の2行目
webpackのプラグイン等の設定の施されている。

P307
冒頭から3行目
独自の処理を加えられます。

P307
「8.5.2 リントツール」内の4行目
プロジェクトの独自にルール対応

P311
表の「build.assetsPublicPath」の説明の3行目
適切はパスを指定する必要がある。

P312
表の「build.priductionGzip」の説明の1〜2行目
(npm install要必須)

P318
「セットアップ後、」から始まる文章内
src/store/index.jsを以下のような雛形コードを実装します。

P325
「9.1.2 Atoms」内のラベルコンポーネントの説明内
フォームで入力受付な入力要素

P325
モーダル内のTEXTAREA
ブロックをしないようする

P326
「9.1.3 Molecules」内のタスク詳細フォームの説明内
タスク名とタスク説明を更新するに必要な

P327
モーダル内のTEXTAREA
ブロックをしないようする

P328
「9.1.5 Templates」内の1行目
MoleculesやOrganismsなど組み合わせて

P330
モーダル内のTEXTAREA
ブロックをしないようする

P330
「9.2.1 ディレクトリの構造化と各ファイルの配置」内の2行目
ソースコードを格納するsrcの下、

P333
補足の*7内の2行目
カタログ化することでUIとして動作確認や、

P334
「9.3.1 状態モデリング」内のTask状態の詳細
タスクの名前や説明など情報を保持。

P335
「ストアによるモデリングした状態の管理」のすぐ下の行
ここまで状態のモデリングは完了です。

P336
補足の*11内の3〜4行目
関数内のいくつからの処理を経て、

P337
ページ下部のデータフローリスト2番目
APIトークンtokenとログインしたユーザーIDuserIdを

P344
「9.3.4 アクションの雛形」内の2行目
アクションハンドラを関数を定義しています。

P344
補足の*17内の1行目
commitオブジェクトを引数を受けています。

P345
「バックエンドAPIとの通信のための準備」のすぐ下の3行目
以下のようにAPIモジュールの配置します。

P345
モジュール表のAuthの説明
認証周りを機能を提供する

P346
モーダル内のTEXTAREA
ブロックをしないようする

P347
リストの上から5行目
リダイレクトしてアプリケーション利用開始する

P348
ページ中間の文章の2行目
このルート定義をベース実装していきます。

P351
「10.1.1 アプリケーションの実装に入る前に」のVue.jsのロゴの削除
物理ファイルパス: src/assets/logo.pngの削除

P358
備考欄
Vuexのloginアクション処理をKbnLoginFormコンポーネントとを

P368
コードのすぐ下の1行目
ログイン処理について検証してます。

P376
補足の*17内の2行目
これで余計に作業が発生しまうのと、

P378
「アプリケーションコードの作成」内の4行目(途中のコード行は除く)
付与される認証トークがあるかどうか

P378
「アプリケーションコードの作成」内の4行目(途中のコード行は除く)
該当ルートのページの遷移させるか

P380
冒頭から3行目
以下画面のように、

P385
「選択したコンポーネントの情報が表示されたコンポーネントインスペクタ」のすぐ下の1行目
何らかしらの値を入力

P387
「タイムトラベルを実行した時の様子」画像の下の3行目
マウスオーバーさせて状態されたタイムトラベル

P387
補足の*27の1行目
Base Stateは初期状態を示します。。

P388
冒頭から6行目
そしてイベントの情報として渡すペイロートを確認できます。

P388
「10.6 E2Eテスト」内の9行目
動作検証にはE2Eをコードに落とし込む

P388
「10.6 E2Eテスト」内の10行目
コードでWebブラウザ上で動きを

P388
補足の*30内の1行目
trueを設定して状態で

P389
最初のターミナルコマンドを除いた冒頭から3行目
各行コメントがついているので難しいですところはないでしょう。

P389
中段のコード部分
// ログイン成功に伴うリダイレクト後、ボードページが表示されるまだ待機

P400
「10.8.2 アプリケーションのデプロイ」内の2〜3行目
アプリケーションをデプロイが終わってしまいました。

P400
「Vue.jsのバックエンド」コラムの前の3行前
あとはデプロイするだけです。。

P401
「10.9 パフォーマンス測定・改善」の5行目
よりよいユーザー体験を与えたいと行った動機

P402
冒頭のコードの後の1〜2行目
アプリケーションにトップにアクセスします。

P403
1行目
コンポーネントの処理毎にJavaScriptに実行所要時間を

P407
「v-onceでコンポーネントのコンテンツをキャシュする」
コンテンツをキャシュする

P407
「v-onceでコンポーネントのコンテンツをキャシュする」内のコードのすぐ下
この例ではmessageをバインドしてますが、

P419
「A.2.5 クラスの変更」内の4行目
addClass,removeClass,toggleClassといった

P424
「v-modelの振る舞い」内の「lazyディレクティブは、」の行から下へ2行目
同期するようになってます。

P425
1行目
AppendixBでは、

P427
ページの一番上のコード部分の「.storybook」のコメント
Storybookの動作させるために

P429
ページ最後の行
が登録されてるはずです

P430
ページ最後のターミナルコマンドのすぐ上の文章
開発プロジェクトのチーム以外にユーザーに公開

P443
「C.1 Nuxt.jsとは」の7行目
ミドルウェアやプラグインになどによって

P443
補足の*1
あらかじめ用意されたHTMLファイルを用意するだけで

P443
補足の*7内の4行目
コミュニティ活動費用の支援受けながら

P444
ページ最下部のイメージのサーバーサイド側
コンポーネント郡

P445
「サーバーサイドレンダリング環境の構築」の1行目
単体でもサーバーレンダリング(SSR)

P446
「サーバーサイドレンダリングの必要性」内の3行目
サーバーサイドレンダリングの対応した

P446
「サーバーサイドレンダリングの必要性」内の5行目
キャッシュ戦略によって対応するサーバー側の負荷を軽減させるなどの対応が

P446
補足の*2の1〜2行目
時間がかかるため時間がかかります。

P448
「C.3 Nuxt.jsをはじめる」の「Nuxt.jsは、」で始まる行
アプリケーション開発を開始するためテンプレートを

P451
1行目
pagesディレクトリに配下に

P456
「Nuxt.jsにおけるサーバーサイドレンダリング」内の1行目
デフォルト有効になっています。

P457
「Nuxt.jsクライアントサイドレンダリング」の2行目
プロダクト情報ページに確認できます。

P457
「Nuxt.jsクライアントサイドレンダリング」イメージの下1行目
このようにデフォルト有効に

P457
「Nuxt.jsクライアントサイドレンダリング」イメージの下2行目
npm run dev -- --spa

P457
補足の*1の1行目
公式ドキュメントをご参照ください。
